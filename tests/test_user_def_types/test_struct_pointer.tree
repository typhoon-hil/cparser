translation_unit[5->336]
  external_decl_1[5->336]
    external_decl[5->336]
      function_definition[5->336]
        decl_specs[5->66]
          decl_specs_g1_1[5->66]
            decl_specs_g1_1[5->57]
              decl_specs_g1[5->57]
                type_spec[5->57]
                  struct_or_union_spec[5->57]
                    struct_or_union[5->11]
                      struct[5->11, "struct"]
                    id[12->19, "Complex"]
                    {[20->21, "{"]
                    struct_decl_1[30->51]
                      struct_decl_1[30->36]
                        struct_decl[30->36]
                          spec_qualifier_list[30->33]
                            type_spec[30->33]
                              int[30->33, "int"]
                          struct_declarator_1_comma[34->35]
                            struct_declarator[34->35]
                              declarator[34->35]
                                pointer_opt[34->34]
                                direct_declarator[34->35]
                                  id[34->35, "x"]
                          ;[35->36, ";"]
                      struct_decl[45->51]
                        spec_qualifier_list[45->48]
                          type_spec[45->48]
                            int[45->48, "int"]
                        struct_declarator_1_comma[49->50]
                          struct_declarator[49->50]
                            declarator[49->50]
                              pointer_opt[49->49]
                              direct_declarator[49->50]
                                id[49->50, "y"]
                        ;[50->51, ";"]
                    }[56->57, "}"]
            decl_specs_g1[63->66]
              type_spec[63->66]
                int[63->66, "int"]
        declarator[67->73]
          pointer_opt[67->67]
          direct_declarator[67->73]
            direct_declarator[67->71]
              id[67->71, "main"]
            ([71->72, "("]
            )[72->73, ")"]
        compound_stat[74->336]
          {[74->75, "{"]
          block_item_0[84->330]
            block_item_1[84->330]
              block_item_1[84->311]
                block_item_1[84->261]
                  block_item_1[84->228]
                    block_item_1[84->196]
                      block_item_1[84->166]
                        block_item_1[84->134]
                          block_item_1[84->104]
                            block_item[84->104]
                              decl[84->104]
                                decl_body[84->103]
                                  decl_specs[84->98]
                                    decl_specs_g1_1[84->98]
                                      decl_specs_g1[84->98]
                                        type_spec[84->98]
                                          struct_or_union_spec[84->98]
                                            struct_or_union[84->90]
                                              struct[84->90, "struct"]
                                            id[91->98, "Complex"]
                                  init_declarator_list_opt[99->103]
                                    init_declarator_list[99->103]
                                      init_declarator_1_comma[99->103]
                                        init_declarator[99->103]
                                          declarator[99->103]
                                            pointer_opt[99->100]
                                              pointer[99->100]
                                                *[99->100, "*"]
                                                type_qualifier_0[100->100]
                                                pointer_opt[100->100]
                                            direct_declarator[100->103]
                                              id[100->103, "ptr"]
                                ;[103->104, ";"]
                          block_item[114->134]
                            stat[114->134]
                              exp_stat[114->134]
                                exp_opt[114->133]
                                  exp[114->133]
                                    assignment_exp[114->133]
                                      conditional_exp[114->133]
                                        logical_or_exp[114->133]
                                          logical_and_exp[114->133]
                                            inclusive_or_exp[114->133]
                                              exclusive_or_exp[114->133]
                                                and_exp[114->133]
                                                  equality_exp[114->133]
                                                    relational_exp[114->133]
                                                      shift_expression[114->133]
                                                        additive_exp[114->133]
                                                          mult_exp[114->133]
                                                            cast_exp[114->133]
                                                              unary_exp[114->133]
                                                                postfix_exp[114->133]
                                                                  postfix_exp[114->120]
                                                                    primary_exp[114->120]
                                                                      id[114->120, "printf"]
                                                                  ([120->121, "("]
                                                                  assignment_exp_0_comma[121->132]
                                                                    assignment_exp_1_comma[121->132]
                                                                      assignment_exp[121->132]
                                                                        conditional_exp[121->132]
                                                                          logical_or_exp[121->132]
                                                                            logical_and_exp[121->132]
                                                                              inclusive_or_exp[121->132]
                                                                                exclusive_or_exp[121->132]
                                                                                  and_exp[121->132]
                                                                                    equality_exp[121->132]
                                                                                      relational_exp[121->132]
                                                                                        shift_expression[121->132]
                                                                                          additive_exp[121->132]
                                                                                            mult_exp[121->132]
                                                                                              cast_exp[121->132]
                                                                                                unary_exp[121->132]
                                                                                                  postfix_exp[121->132]
                                                                                                    primary_exp[121->132]
                                                                                                      adj_strings[121->132]
                                                                                                        string_1[121->132]
                                                                                                          string[121->132, ""Enter X: ""]
                                                                  )[132->133, ")"]
                                ;[133->134, ";"]
                        block_item[143->166]
                          stat[143->166]
                            exp_stat[143->166]
                              exp_opt[143->165]
                                exp[143->165]
                                  assignment_exp[143->165]
                                    conditional_exp[143->165]
                                      logical_or_exp[143->165]
                                        logical_and_exp[143->165]
                                          inclusive_or_exp[143->165]
                                            exclusive_or_exp[143->165]
                                              and_exp[143->165]
                                                equality_exp[143->165]
                                                  relational_exp[143->165]
                                                    shift_expression[143->165]
                                                      additive_exp[143->165]
                                                        mult_exp[143->165]
                                                          cast_exp[143->165]
                                                            unary_exp[143->165]
                                                              postfix_exp[143->165]
                                                                postfix_exp[143->148]
                                                                  primary_exp[143->148]
                                                                    id[143->148, "scanf"]
                                                                ([148->149, "("]
                                                                assignment_exp_0_comma[149->164]
                                                                  assignment_exp_1_comma[149->164]
                                                                    assignment_exp_1_comma[149->153]
                                                                      assignment_exp[149->153]
                                                                        conditional_exp[149->153]
                                                                          logical_or_exp[149->153]
                                                                            logical_and_exp[149->153]
                                                                              inclusive_or_exp[149->153]
                                                                                exclusive_or_exp[149->153]
                                                                                  and_exp[149->153]
                                                                                    equality_exp[149->153]
                                                                                      relational_exp[149->153]
                                                                                        shift_expression[149->153]
                                                                                          additive_exp[149->153]
                                                                                            mult_exp[149->153]
                                                                                              cast_exp[149->153]
                                                                                                unary_exp[149->153]
                                                                                                  postfix_exp[149->153]
                                                                                                    primary_exp[149->153]
                                                                                                      adj_strings[149->153]
                                                                                                        string_1[149->153]
                                                                                                          string[149->153, ""%d""]
                                                                    comma[153->154, ","]
                                                                    assignment_exp[155->164]
                                                                      conditional_exp[155->164]
                                                                        logical_or_exp[155->164]
                                                                          logical_and_exp[155->164]
                                                                            inclusive_or_exp[155->164]
                                                                              exclusive_or_exp[155->164]
                                                                                and_exp[155->164]
                                                                                  equality_exp[155->164]
                                                                                    relational_exp[155->164]
                                                                                      shift_expression[155->164]
                                                                                        additive_exp[155->164]
                                                                                          mult_exp[155->164]
                                                                                            cast_exp[155->164]
                                                                                              unary_exp[155->164]
                                                                                                unary_operator[155->156]
                                                                                                  &[155->156, "&"]
                                                                                                cast_exp[156->164]
                                                                                                  unary_exp[156->164]
                                                                                                    postfix_exp[156->164]
                                                                                                      postfix_exp[156->162]
                                                                                                        primary_exp[156->162]
                                                                                                          ([156->157, "("]
                                                                                                          exp[157->161]
                                                                                                            assignment_exp[157->161]
                                                                                                              conditional_exp[157->161]
                                                                                                                logical_or_exp[157->161]
                                                                                                                  logical_and_exp[157->161]
                                                                                                                    inclusive_or_exp[157->161]
                                                                                                                      exclusive_or_exp[157->161]
                                                                                                                        and_exp[157->161]
                                                                                                                          equality_exp[157->161]
                                                                                                                            relational_exp[157->161]
                                                                                                                              shift_expression[157->161]
                                                                                                                                additive_exp[157->161]
                                                                                                                                  mult_exp[157->161]
                                                                                                                                    cast_exp[157->161]
                                                                                                                                      unary_exp[157->161]
                                                                                                                                        unary_operator[157->158]
                                                                                                                                          *[157->158, "*"]
                                                                                                                                        cast_exp[158->161]
                                                                                                                                          unary_exp[158->161]
                                                                                                                                            postfix_exp[158->161]
                                                                                                                                              primary_exp[158->161]
                                                                                                                                                id[158->161, "ptr"]
                                                                                                          )[161->162, ")"]
                                                                                                      dot[162->163, "."]
                                                                                                      id[163->164, "x"]
                                                                )[164->165, ")"]
                              ;[165->166, ";"]
                      block_item[176->196]
                        stat[176->196]
                          exp_stat[176->196]
                            exp_opt[176->195]
                              exp[176->195]
                                assignment_exp[176->195]
                                  conditional_exp[176->195]
                                    logical_or_exp[176->195]
                                      logical_and_exp[176->195]
                                        inclusive_or_exp[176->195]
                                          exclusive_or_exp[176->195]
                                            and_exp[176->195]
                                              equality_exp[176->195]
                                                relational_exp[176->195]
                                                  shift_expression[176->195]
                                                    additive_exp[176->195]
                                                      mult_exp[176->195]
                                                        cast_exp[176->195]
                                                          unary_exp[176->195]
                                                            postfix_exp[176->195]
                                                              postfix_exp[176->182]
                                                                primary_exp[176->182]
                                                                  id[176->182, "printf"]
                                                              ([182->183, "("]
                                                              assignment_exp_0_comma[183->194]
                                                                assignment_exp_1_comma[183->194]
                                                                  assignment_exp[183->194]
                                                                    conditional_exp[183->194]
                                                                      logical_or_exp[183->194]
                                                                        logical_and_exp[183->194]
                                                                          inclusive_or_exp[183->194]
                                                                            exclusive_or_exp[183->194]
                                                                              and_exp[183->194]
                                                                                equality_exp[183->194]
                                                                                  relational_exp[183->194]
                                                                                    shift_expression[183->194]
                                                                                      additive_exp[183->194]
                                                                                        mult_exp[183->194]
                                                                                          cast_exp[183->194]
                                                                                            unary_exp[183->194]
                                                                                              postfix_exp[183->194]
                                                                                                primary_exp[183->194]
                                                                                                  adj_strings[183->194]
                                                                                                    string_1[183->194]
                                                                                                      string[183->194, ""Enter Y: ""]
                                                              )[194->195, ")"]
                            ;[195->196, ";"]
                    block_item[205->228]
                      stat[205->228]
                        exp_stat[205->228]
                          exp_opt[205->227]
                            exp[205->227]
                              assignment_exp[205->227]
                                conditional_exp[205->227]
                                  logical_or_exp[205->227]
                                    logical_and_exp[205->227]
                                      inclusive_or_exp[205->227]
                                        exclusive_or_exp[205->227]
                                          and_exp[205->227]
                                            equality_exp[205->227]
                                              relational_exp[205->227]
                                                shift_expression[205->227]
                                                  additive_exp[205->227]
                                                    mult_exp[205->227]
                                                      cast_exp[205->227]
                                                        unary_exp[205->227]
                                                          postfix_exp[205->227]
                                                            postfix_exp[205->210]
                                                              primary_exp[205->210]
                                                                id[205->210, "scanf"]
                                                            ([210->211, "("]
                                                            assignment_exp_0_comma[211->226]
                                                              assignment_exp_1_comma[211->226]
                                                                assignment_exp_1_comma[211->215]
                                                                  assignment_exp[211->215]
                                                                    conditional_exp[211->215]
                                                                      logical_or_exp[211->215]
                                                                        logical_and_exp[211->215]
                                                                          inclusive_or_exp[211->215]
                                                                            exclusive_or_exp[211->215]
                                                                              and_exp[211->215]
                                                                                equality_exp[211->215]
                                                                                  relational_exp[211->215]
                                                                                    shift_expression[211->215]
                                                                                      additive_exp[211->215]
                                                                                        mult_exp[211->215]
                                                                                          cast_exp[211->215]
                                                                                            unary_exp[211->215]
                                                                                              postfix_exp[211->215]
                                                                                                primary_exp[211->215]
                                                                                                  adj_strings[211->215]
                                                                                                    string_1[211->215]
                                                                                                      string[211->215, ""%d""]
                                                                comma[215->216, ","]
                                                                assignment_exp[217->226]
                                                                  conditional_exp[217->226]
                                                                    logical_or_exp[217->226]
                                                                      logical_and_exp[217->226]
                                                                        inclusive_or_exp[217->226]
                                                                          exclusive_or_exp[217->226]
                                                                            and_exp[217->226]
                                                                              equality_exp[217->226]
                                                                                relational_exp[217->226]
                                                                                  shift_expression[217->226]
                                                                                    additive_exp[217->226]
                                                                                      mult_exp[217->226]
                                                                                        cast_exp[217->226]
                                                                                          unary_exp[217->226]
                                                                                            unary_operator[217->218]
                                                                                              &[217->218, "&"]
                                                                                            cast_exp[218->226]
                                                                                              unary_exp[218->226]
                                                                                                postfix_exp[218->226]
                                                                                                  postfix_exp[218->224]
                                                                                                    primary_exp[218->224]
                                                                                                      ([218->219, "("]
                                                                                                      exp[219->223]
                                                                                                        assignment_exp[219->223]
                                                                                                          conditional_exp[219->223]
                                                                                                            logical_or_exp[219->223]
                                                                                                              logical_and_exp[219->223]
                                                                                                                inclusive_or_exp[219->223]
                                                                                                                  exclusive_or_exp[219->223]
                                                                                                                    and_exp[219->223]
                                                                                                                      equality_exp[219->223]
                                                                                                                        relational_exp[219->223]
                                                                                                                          shift_expression[219->223]
                                                                                                                            additive_exp[219->223]
                                                                                                                              mult_exp[219->223]
                                                                                                                                cast_exp[219->223]
                                                                                                                                  unary_exp[219->223]
                                                                                                                                    unary_operator[219->220]
                                                                                                                                      *[219->220, "*"]
                                                                                                                                    cast_exp[220->223]
                                                                                                                                      unary_exp[220->223]
                                                                                                                                        postfix_exp[220->223]
                                                                                                                                          primary_exp[220->223]
                                                                                                                                            id[220->223, "ptr"]
                                                                                                      )[223->224, ")"]
                                                                                                  dot[224->225, "."]
                                                                                                  id[225->226, "y"]
                                                            )[226->227, ")"]
                          ;[227->228, ";"]
                  block_item[238->261]
                    stat[238->261]
                      exp_stat[238->261]
                        exp_opt[238->260]
                          exp[238->260]
                            assignment_exp[238->260]
                              conditional_exp[238->260]
                                logical_or_exp[238->260]
                                  logical_and_exp[238->260]
                                    inclusive_or_exp[238->260]
                                      exclusive_or_exp[238->260]
                                        and_exp[238->260]
                                          equality_exp[238->260]
                                            relational_exp[238->260]
                                              shift_expression[238->260]
                                                additive_exp[238->260]
                                                  mult_exp[238->260]
                                                    cast_exp[238->260]
                                                      unary_exp[238->260]
                                                        postfix_exp[238->260]
                                                          postfix_exp[238->244]
                                                            primary_exp[238->244]
                                                              id[238->244, "printf"]
                                                          ([244->245, "("]
                                                          assignment_exp_0_comma[245->259]
                                                            assignment_exp_1_comma[245->259]
                                                              assignment_exp[245->259]
                                                                conditional_exp[245->259]
                                                                  logical_or_exp[245->259]
                                                                    logical_and_exp[245->259]
                                                                      inclusive_or_exp[245->259]
                                                                        exclusive_or_exp[245->259]
                                                                          and_exp[245->259]
                                                                            equality_exp[245->259]
                                                                              relational_exp[245->259]
                                                                                shift_expression[245->259]
                                                                                  additive_exp[245->259]
                                                                                    mult_exp[245->259]
                                                                                      cast_exp[245->259]
                                                                                        unary_exp[245->259]
                                                                                          postfix_exp[245->259]
                                                                                            primary_exp[245->259]
                                                                                              adj_strings[245->259]
                                                                                                string_1[245->259]
                                                                                                  string[245->259, ""Displaying: ""]
                                                          )[259->260, ")"]
                        ;[260->261, ";"]
                block_item[270->311]
                  stat[270->311]
                    exp_stat[270->311]
                      exp_opt[270->310]
                        exp[270->310]
                          assignment_exp[270->310]
                            conditional_exp[270->310]
                              logical_or_exp[270->310]
                                logical_and_exp[270->310]
                                  inclusive_or_exp[270->310]
                                    exclusive_or_exp[270->310]
                                      and_exp[270->310]
                                        equality_exp[270->310]
                                          relational_exp[270->310]
                                            shift_expression[270->310]
                                              additive_exp[270->310]
                                                mult_exp[270->310]
                                                  cast_exp[270->310]
                                                    unary_exp[270->310]
                                                      postfix_exp[270->310]
                                                        postfix_exp[270->276]
                                                          primary_exp[270->276]
                                                            id[270->276, "printf"]
                                                        ([276->277, "("]
                                                        assignment_exp_0_comma[277->309]
                                                          assignment_exp_1_comma[277->309]
                                                            assignment_exp_1_comma[277->294]
                                                              assignment_exp_1_comma[277->283]
                                                                assignment_exp[277->283]
                                                                  conditional_exp[277->283]
                                                                    logical_or_exp[277->283]
                                                                      logical_and_exp[277->283]
                                                                        inclusive_or_exp[277->283]
                                                                          exclusive_or_exp[277->283]
                                                                            and_exp[277->283]
                                                                              equality_exp[277->283]
                                                                                relational_exp[277->283]
                                                                                  shift_expression[277->283]
                                                                                    additive_exp[277->283]
                                                                                      mult_exp[277->283]
                                                                                        cast_exp[277->283]
                                                                                          unary_exp[277->283]
                                                                                            postfix_exp[277->283]
                                                                                              primary_exp[277->283]
                                                                                                adj_strings[277->283]
                                                                                                  string_1[277->283]
                                                                                                    string[277->283, ""%d%d""]
                                                              comma[283->284, ","]
                                                              assignment_exp[284->294]
                                                                conditional_exp[284->294]
                                                                  logical_or_exp[284->294]
                                                                    logical_and_exp[284->294]
                                                                      inclusive_or_exp[284->294]
                                                                        exclusive_or_exp[284->294]
                                                                          and_exp[284->294]
                                                                            equality_exp[284->294]
                                                                              relational_exp[284->294]
                                                                                shift_expression[284->294]
                                                                                  additive_exp[284->294]
                                                                                    mult_exp[284->294]
                                                                                      cast_exp[284->294]
                                                                                        unary_exp[284->294]
                                                                                          postfix_exp[284->294]
                                                                                            postfix_exp[284->290]
                                                                                              primary_exp[284->290]
                                                                                                ([284->285, "("]
                                                                                                exp[285->289]
                                                                                                  assignment_exp[285->289]
                                                                                                    conditional_exp[285->289]
                                                                                                      logical_or_exp[285->289]
                                                                                                        logical_and_exp[285->289]
                                                                                                          inclusive_or_exp[285->289]
                                                                                                            exclusive_or_exp[285->289]
                                                                                                              and_exp[285->289]
                                                                                                                equality_exp[285->289]
                                                                                                                  relational_exp[285->289]
                                                                                                                    shift_expression[285->289]
                                                                                                                      additive_exp[285->289]
                                                                                                                        mult_exp[285->289]
                                                                                                                          cast_exp[285->289]
                                                                                                                            unary_exp[285->289]
                                                                                                                              unary_operator[285->286]
                                                                                                                                *[285->286, "*"]
                                                                                                                              cast_exp[286->289]
                                                                                                                                unary_exp[286->289]
                                                                                                                                  postfix_exp[286->289]
                                                                                                                                    primary_exp[286->289]
                                                                                                                                      id[286->289, "ptr"]
                                                                                                )[289->290, ")"]
                                                                                            dot[290->291, "."]
                                                                                            id[291->294, "age"]
                                                            comma[294->295, ","]
                                                            assignment_exp[296->309]
                                                              conditional_exp[296->309]
                                                                logical_or_exp[296->309]
                                                                  logical_and_exp[296->309]
                                                                    inclusive_or_exp[296->309]
                                                                      exclusive_or_exp[296->309]
                                                                        and_exp[296->309]
                                                                          equality_exp[296->309]
                                                                            relational_exp[296->309]
                                                                              shift_expression[296->309]
                                                                                additive_exp[296->309]
                                                                                  mult_exp[296->309]
                                                                                    cast_exp[296->309]
                                                                                      unary_exp[296->309]
                                                                                        postfix_exp[296->309]
                                                                                          postfix_exp[296->302]
                                                                                            primary_exp[296->302]
                                                                                              ([296->297, "("]
                                                                                              exp[297->301]
                                                                                                assignment_exp[297->301]
                                                                                                  conditional_exp[297->301]
                                                                                                    logical_or_exp[297->301]
                                                                                                      logical_and_exp[297->301]
                                                                                                        inclusive_or_exp[297->301]
                                                                                                          exclusive_or_exp[297->301]
                                                                                                            and_exp[297->301]
                                                                                                              equality_exp[297->301]
                                                                                                                relational_exp[297->301]
                                                                                                                  shift_expression[297->301]
                                                                                                                    additive_exp[297->301]
                                                                                                                      mult_exp[297->301]
                                                                                                                        cast_exp[297->301]
                                                                                                                          unary_exp[297->301]
                                                                                                                            unary_operator[297->298]
                                                                                                                              *[297->298, "*"]
                                                                                                                            cast_exp[298->301]
                                                                                                                              unary_exp[298->301]
                                                                                                                                postfix_exp[298->301]
                                                                                                                                  primary_exp[298->301]
                                                                                                                                    id[298->301, "ptr"]
                                                                                              )[301->302, ")"]
                                                                                          dot[302->303, "."]
                                                                                          id[303->309, "weight"]
                                                        )[309->310, ")"]
                      ;[310->311, ";"]
              block_item[321->330]
                stat[321->330]
                  jump_stat[321->330]
                    return[321->327, "return"]
                    exp[328->329]
                      assignment_exp[328->329]
                        conditional_exp[328->329]
                          logical_or_exp[328->329]
                            logical_and_exp[328->329]
                              inclusive_or_exp[328->329]
                                exclusive_or_exp[328->329]
                                  and_exp[328->329]
                                    equality_exp[328->329]
                                      relational_exp[328->329]
                                        shift_expression[328->329]
                                          additive_exp[328->329]
                                            mult_exp[328->329]
                                              cast_exp[328->329]
                                                unary_exp[328->329]
                                                  postfix_exp[328->329]
                                                    primary_exp[328->329]
                                                      cconst[328->329]
                                                        int_const[328->329, "0"]
                    ;[329->330, ";"]
          }[335->336, "}"]